/*
* generated by Xtext
*/
package jolie.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import jolie.xtext.services.JolieGrammarAccess;

public class JolieParser extends AbstractContentAssistParser {
	
	@Inject
	private JolieGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected jolie.xtext.ui.contentassist.antlr.internal.InternalJolieParser createParser() {
		jolie.xtext.ui.contentassist.antlr.internal.InternalJolieParser result = new jolie.xtext.ui.contentassist.antlr.internal.InternalJolieParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getProgramAccess().getAlternatives_0(), "rule__Program__Alternatives_0");
					put(grammarAccess.getConstantAccess().getAlternatives_4(), "rule__Constant__Alternatives_4");
					put(grammarAccess.getConstantAccess().getAlternatives_5_3(), "rule__Constant__Alternatives_5_3");
					put(grammarAccess.getExecutionAccess().getAlternatives_2(), "rule__Execution__Alternatives_2");
					put(grammarAccess.getSubtypesAccess().getAlternatives(), "rule__Subtypes__Alternatives");
					put(grammarAccess.getCardinalityAccess().getAlternatives(), "rule__Cardinality__Alternatives");
					put(grammarAccess.getCardinalityAccess().getAlternatives_2_3(), "rule__Cardinality__Alternatives_2_3");
					put(grammarAccess.getNative_typeAccess().getAlternatives(), "rule__Native_type__Alternatives");
					put(grammarAccess.getNative_typeAccess().getNameAlternatives_0_0(), "rule__Native_type__NameAlternatives_0_0");
					put(grammarAccess.getEmbeddedAccess().getAlternatives_2(), "rule__Embedded__Alternatives_2");
					put(grammarAccess.getProcessAccess().getAlternatives(), "rule__Process__Alternatives");
					put(grammarAccess.getNDChoiceStatementAccess().getAlternatives_1_1(), "rule__NDChoiceStatement__Alternatives_1_1");
					put(grammarAccess.getNDChoiceStatementAccess().getAlternatives_1_1_1(), "rule__NDChoiceStatement__Alternatives_1_1_1");
					put(grammarAccess.getBasicStatementAccess().getAlternatives(), "rule__BasicStatement__Alternatives");
					put(grammarAccess.getIs_functionAccess().getAlternatives_1(), "rule__Is_function__Alternatives_1");
					put(grammarAccess.getInputOrOutputOperationDefOrCallAccess().getAlternatives(), "rule__InputOrOutputOperationDefOrCall__Alternatives");
					put(grammarAccess.getRightSideAccess().getAlternatives(), "rule__RightSide__Alternatives");
					put(grammarAccess.getOutputPortCallAccess().getAlternatives(), "rule__OutputPortCall__Alternatives");
					put(grammarAccess.getInstallFuncitonAccess().getAlternatives_0(), "rule__InstallFunciton__Alternatives_0");
					put(grammarAccess.getInstallFuncitonAccess().getAlternatives_3_1(), "rule__InstallFunciton__Alternatives_3_1");
					put(grammarAccess.getPreIncrementDecrementAccess().getAlternatives_0(), "rule__PreIncrementDecrement__Alternatives_0");
					put(grammarAccess.getIfAccess().getAlternatives_5(), "rule__If__Alternatives_5");
					put(grammarAccess.getConditionAccess().getAlternatives(), "rule__Condition__Alternatives");
					put(grammarAccess.getConditionAccess().getAlternatives_1_3_0(), "rule__Condition__Alternatives_1_3_0");
					put(grammarAccess.getConditionAccess().getAlternatives_2_1(), "rule__Condition__Alternatives_2_1");
					put(grammarAccess.getConditionAccess().getAlternatives_2_3_0(), "rule__Condition__Alternatives_2_3_0");
					put(grammarAccess.getRightConditionAccess().getAlternatives_0(), "rule__RightCondition__Alternatives_0");
					put(grammarAccess.getExpressionAccess().getOpAlternatives_1_1_0(), "rule__Expression__OpAlternatives_1_1_0");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives(), "rule__TerminalExpression__Alternatives");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives_4_0(), "rule__TerminalExpression__Alternatives_4_0");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives_5_1(), "rule__TerminalExpression__Alternatives_5_1");
					put(grammarAccess.getVariablePathAccess().getAlternatives(), "rule__VariablePath__Alternatives");
					put(grammarAccess.getVariablePathAccess().getAlternatives_0_5(), "rule__VariablePath__Alternatives_0_5");
					put(grammarAccess.getVariablePathAccess().getAlternatives_0_5_0_1(), "rule__VariablePath__Alternatives_0_5_0_1");
					put(grammarAccess.getVariablePathAccess().getAlternatives_1_2(), "rule__VariablePath__Alternatives_1_2");
					put(grammarAccess.getVariablePathAccess().getAlternatives_1_2_0_1(), "rule__VariablePath__Alternatives_1_2_0_1");
					put(grammarAccess.getPortAccess().getAlternatives(), "rule__Port__Alternatives");
					put(grammarAccess.getTypeOfThrowAccess().getAlternatives(), "rule__TypeOfThrow__Alternatives");
					put(grammarAccess.getUriAccess().getAlternatives(), "rule__Uri__Alternatives");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getConstantAccess().getGroup(), "rule__Constant__Group__0");
					put(grammarAccess.getConstantAccess().getGroup_5(), "rule__Constant__Group_5__0");
					put(grammarAccess.getExecutionAccess().getGroup(), "rule__Execution__Group__0");
					put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
					put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
					put(grammarAccess.getTypedefAccess().getGroup(), "rule__Typedef__Group__0");
					put(grammarAccess.getSubtypesAccess().getGroup_0(), "rule__Subtypes__Group_0__0");
					put(grammarAccess.getSubtypesAccess().getGroup_0_1(), "rule__Subtypes__Group_0_1__0");
					put(grammarAccess.getSubtypesAccess().getGroup_1(), "rule__Subtypes__Group_1__0");
					put(grammarAccess.getCardinalityAccess().getGroup_2(), "rule__Cardinality__Group_2__0");
					put(grammarAccess.getEmbeddedAccess().getGroup(), "rule__Embedded__Group__0");
					put(grammarAccess.getEmbeddedAccess().getGroup_5(), "rule__Embedded__Group_5__0");
					put(grammarAccess.getEmbeddedAccess().getGroup_6(), "rule__Embedded__Group_6__0");
					put(grammarAccess.getEmbeddedAccess().getGroup_6_2(), "rule__Embedded__Group_6_2__0");
					put(grammarAccess.getDefineAccess().getGroup(), "rule__Define__Group__0");
					put(grammarAccess.getInitAccess().getGroup(), "rule__Init__Group__0");
					put(grammarAccess.getMainAccess().getGroup(), "rule__Main__Group__0");
					put(grammarAccess.getMainProcessAccess().getGroup(), "rule__MainProcess__Group__0");
					put(grammarAccess.getProcessAccess().getGroup_0(), "rule__Process__Group_0__0");
					put(grammarAccess.getProcessAccess().getGroup_1(), "rule__Process__Group_1__0");
					put(grammarAccess.getParallelStatementAccess().getGroup(), "rule__ParallelStatement__Group__0");
					put(grammarAccess.getParallelStatementAccess().getGroup_1(), "rule__ParallelStatement__Group_1__0");
					put(grammarAccess.getParallelStatementAccess().getGroup_1_1(), "rule__ParallelStatement__Group_1_1__0");
					put(grammarAccess.getSequenceStatementAccess().getGroup(), "rule__SequenceStatement__Group__0");
					put(grammarAccess.getSequenceStatementAccess().getGroup_1(), "rule__SequenceStatement__Group_1__0");
					put(grammarAccess.getSequenceStatementAccess().getGroup_1_1(), "rule__SequenceStatement__Group_1_1__0");
					put(grammarAccess.getNDChoiceStatementAccess().getGroup(), "rule__NDChoiceStatement__Group__0");
					put(grammarAccess.getNDChoiceStatementAccess().getGroup_1(), "rule__NDChoiceStatement__Group_1__0");
					put(grammarAccess.getNDChoiceStatementAccess().getGroup_1_1_0(), "rule__NDChoiceStatement__Group_1_1_0__0");
					put(grammarAccess.getNDChoiceStatementAccess().getGroup_1_1_1_1(), "rule__NDChoiceStatement__Group_1_1_1_1__0");
					put(grammarAccess.getBasicStatementAccess().getGroup_0(), "rule__BasicStatement__Group_0__0");
					put(grammarAccess.getBasicStatementAccess().getGroup_1(), "rule__BasicStatement__Group_1__0");
					put(grammarAccess.getBasicStatementAccess().getGroup_11(), "rule__BasicStatement__Group_11__0");
					put(grammarAccess.getBasicStatementAccess().getGroup_16(), "rule__BasicStatement__Group_16__0");
					put(grammarAccess.getBasicStatementAccess().getGroup_21(), "rule__BasicStatement__Group_21__0");
					put(grammarAccess.getBasicStatementAccess().getGroup_22(), "rule__BasicStatement__Group_22__0");
					put(grammarAccess.getIs_functionAccess().getGroup(), "rule__Is_function__Group__0");
					put(grammarAccess.getInstallAccess().getGroup(), "rule__Install__Group__0");
					put(grammarAccess.getThrowAccess().getGroup(), "rule__Throw__Group__0");
					put(grammarAccess.getThrowAccess().getGroup_3(), "rule__Throw__Group_3__0");
					put(grammarAccess.getCompensateAccess().getGroup(), "rule__Compensate__Group__0");
					put(grammarAccess.getScopeAccess().getGroup(), "rule__Scope__Group__0");
					put(grammarAccess.getInputOrOutputOperationDefOrCallAccess().getGroup_0(), "rule__InputOrOutputOperationDefOrCall__Group_0__0");
					put(grammarAccess.getInputOrOutputOperationDefOrCallAccess().getGroup_1(), "rule__InputOrOutputOperationDefOrCall__Group_1__0");
					put(grammarAccess.getLinkInAccess().getGroup(), "rule__LinkIn__Group__0");
					put(grammarAccess.getLinkOutAccess().getGroup(), "rule__LinkOut__Group__0");
					put(grammarAccess.getAssignStatementOrPostIncrementDecrementOrInputOperationAccess().getGroup(), "rule__AssignStatementOrPostIncrementDecrementOrInputOperation__Group__0");
					put(grammarAccess.getRightSideAccess().getGroup_0(), "rule__RightSide__Group_0__0");
					put(grammarAccess.getRightSideAccess().getGroup_1(), "rule__RightSide__Group_1__0");
					put(grammarAccess.getRightSideAccess().getGroup_2(), "rule__RightSide__Group_2__0");
					put(grammarAccess.getRightSideAccess().getGroup_3(), "rule__RightSide__Group_3__0");
					put(grammarAccess.getRightSideAccess().getGroup_4(), "rule__RightSide__Group_4__0");
					put(grammarAccess.getSynchronizedAccess().getGroup(), "rule__Synchronized__Group__0");
					put(grammarAccess.getUndefAccess().getGroup(), "rule__Undef__Group__0");
					put(grammarAccess.getOutputPortCallAccess().getGroup_1(), "rule__OutputPortCall__Group_1__0");
					put(grammarAccess.getOutputPortCallAccess().getGroup_1_4(), "rule__OutputPortCall__Group_1_4__0");
					put(grammarAccess.getOutputPortCallAccess().getGroup_1_4_3(), "rule__OutputPortCall__Group_1_4_3__0");
					put(grammarAccess.getInstallFuncitonAccess().getGroup(), "rule__InstallFunciton__Group__0");
					put(grammarAccess.getInstallFuncitonAccess().getGroup_3(), "rule__InstallFunciton__Group_3__0");
					put(grammarAccess.getInputOperationAccess().getGroup(), "rule__InputOperation__Group__0");
					put(grammarAccess.getInputOperationAccess().getGroup_1(), "rule__InputOperation__Group_1__0");
					put(grammarAccess.getPreIncrementDecrementAccess().getGroup(), "rule__PreIncrementDecrement__Group__0");
					put(grammarAccess.getIfAccess().getGroup(), "rule__If__Group__0");
					put(grammarAccess.getIfAccess().getGroup_5_0(), "rule__If__Group_5_0__0");
					put(grammarAccess.getForAccess().getGroup(), "rule__For__Group__0");
					put(grammarAccess.getBodyAccess().getGroup(), "rule__Body__Group__0");
					put(grammarAccess.getConditionAccess().getGroup_0(), "rule__Condition__Group_0__0");
					put(grammarAccess.getConditionAccess().getGroup_1(), "rule__Condition__Group_1__0");
					put(grammarAccess.getConditionAccess().getGroup_1_3(), "rule__Condition__Group_1_3__0");
					put(grammarAccess.getConditionAccess().getGroup_2(), "rule__Condition__Group_2__0");
					put(grammarAccess.getConditionAccess().getGroup_2_3(), "rule__Condition__Group_2_3__0");
					put(grammarAccess.getRightConditionAccess().getGroup(), "rule__RightCondition__Group__0");
					put(grammarAccess.getForeachAccess().getGroup(), "rule__Foreach__Group__0");
					put(grammarAccess.getWhileAccess().getGroup(), "rule__While__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_0(), "rule__TerminalExpression__Group_0__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_1(), "rule__TerminalExpression__Group_1__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_2(), "rule__TerminalExpression__Group_2__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_3(), "rule__TerminalExpression__Group_3__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_4(), "rule__TerminalExpression__Group_4__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_5(), "rule__TerminalExpression__Group_5__0");
					put(grammarAccess.getVariablePathAccess().getGroup_0(), "rule__VariablePath__Group_0__0");
					put(grammarAccess.getVariablePathAccess().getGroup_0_4(), "rule__VariablePath__Group_0_4__0");
					put(grammarAccess.getVariablePathAccess().getGroup_0_5_0(), "rule__VariablePath__Group_0_5_0__0");
					put(grammarAccess.getVariablePathAccess().getGroup_0_5_0_2(), "rule__VariablePath__Group_0_5_0_2__0");
					put(grammarAccess.getVariablePathAccess().getGroup_0_5_1(), "rule__VariablePath__Group_0_5_1__0");
					put(grammarAccess.getVariablePathAccess().getGroup_1(), "rule__VariablePath__Group_1__0");
					put(grammarAccess.getVariablePathAccess().getGroup_1_2_0(), "rule__VariablePath__Group_1_2_0__0");
					put(grammarAccess.getVariablePathAccess().getGroup_1_2_0_2(), "rule__VariablePath__Group_1_2_0_2__0");
					put(grammarAccess.getVariablePathAccess().getGroup_1_2_1(), "rule__VariablePath__Group_1_2_1__0");
					put(grammarAccess.getWithAccess().getGroup(), "rule__With__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInputPortStatementAccess().getGroup(), "rule__InputPortStatement__Group__0");
					put(grammarAccess.getOutputPortStatementAccess().getGroup(), "rule__OutputPortStatement__Group__0");
					put(grammarAccess.getOneWayOperationAccess().getGroup(), "rule__OneWayOperation__Group__0");
					put(grammarAccess.getRequestResponseOperationAccess().getGroup(), "rule__RequestResponseOperation__Group__0");
					put(grammarAccess.getOneWayOperationSignatureAccess().getGroup(), "rule__OneWayOperationSignature__Group__0");
					put(grammarAccess.getOneWayOperationSignatureAccess().getGroup_2(), "rule__OneWayOperationSignature__Group_2__0");
					put(grammarAccess.getOneWayOperationSignatureAccess().getGroup_3(), "rule__OneWayOperationSignature__Group_3__0");
					put(grammarAccess.getRequestResponseSignatureAccess().getGroup(), "rule__RequestResponseSignature__Group__0");
					put(grammarAccess.getRequestResponseSignatureAccess().getGroup_2(), "rule__RequestResponseSignature__Group_2__0");
					put(grammarAccess.getRequestResponseSignatureAccess().getGroup_3(), "rule__RequestResponseSignature__Group_3__0");
					put(grammarAccess.getRequestResponseSignatureAccess().getGroup_4(), "rule__RequestResponseSignature__Group_4__0");
					put(grammarAccess.getThrowsClauseAccess().getGroup(), "rule__ThrowsClause__Group__0");
					put(grammarAccess.getThrowsClauseAccess().getGroup_1(), "rule__ThrowsClause__Group_1__0");
					put(grammarAccess.getTypeOfThrowAccess().getGroup_1(), "rule__TypeOfThrow__Group_1__0");
					put(grammarAccess.getLocationAccess().getGroup(), "rule__Location__Group__0");
					put(grammarAccess.getUriAccess().getGroup_0(), "rule__Uri__Group_0__0");
					put(grammarAccess.getUriAccess().getGroup_1(), "rule__Uri__Group_1__0");
					put(grammarAccess.getInterfacesAccess().getGroup(), "rule__Interfaces__Group__0");
					put(grammarAccess.getInterfacesAccess().getGroup_3(), "rule__Interfaces__Group_3__0");
					put(grammarAccess.getProtocolAccess().getGroup(), "rule__Protocol__Group__0");
					put(grammarAccess.getRedirectsAccess().getGroup(), "rule__Redirects__Group__0");
					put(grammarAccess.getRedirectsAccess().getGroup_3(), "rule__Redirects__Group_3__0");
					put(grammarAccess.getRedirectDefAccess().getGroup(), "rule__RedirectDef__Group__0");
					put(grammarAccess.getAggregatesAccess().getGroup(), "rule__Aggregates__Group__0");
					put(grammarAccess.getAggregatesAccess().getGroup_3(), "rule__Aggregates__Group_3__0");
					put(grammarAccess.getProgramAccess().getConstantsAssignment_0_0(), "rule__Program__ConstantsAssignment_0_0");
					put(grammarAccess.getProgramAccess().getIncludeAssignment_0_1(), "rule__Program__IncludeAssignment_0_1");
					put(grammarAccess.getProgramAccess().getPortsAssignment_0_2(), "rule__Program__PortsAssignment_0_2");
					put(grammarAccess.getProgramAccess().getInterfaceAssignment_0_3(), "rule__Program__InterfaceAssignment_0_3");
					put(grammarAccess.getProgramAccess().getTypesAssignment_0_4(), "rule__Program__TypesAssignment_0_4");
					put(grammarAccess.getProgramAccess().getInitAssignment_0_5(), "rule__Program__InitAssignment_0_5");
					put(grammarAccess.getProgramAccess().getExecutionAssignment_0_6(), "rule__Program__ExecutionAssignment_0_6");
					put(grammarAccess.getProgramAccess().getDefineAssignment_0_7(), "rule__Program__DefineAssignment_0_7");
					put(grammarAccess.getProgramAccess().getEmbeddedAssignment_0_8(), "rule__Program__EmbeddedAssignment_0_8");
					put(grammarAccess.getProgramAccess().getMainAssignment_1(), "rule__Program__MainAssignment_1");
					put(grammarAccess.getConstantAccess().getNameAssignment_2(), "rule__Constant__NameAssignment_2");
					put(grammarAccess.getConstantAccess().getNameAssignment_5_1(), "rule__Constant__NameAssignment_5_1");
					put(grammarAccess.getIncludeAccess().getImportURIAssignment_1(), "rule__Include__ImportURIAssignment_1");
					put(grammarAccess.getFileNameAccess().getNameAssignment(), "rule__FileName__NameAssignment");
					put(grammarAccess.getTypeAccess().getNameAssignment_1(), "rule__Type__NameAssignment_1");
					put(grammarAccess.getTypeAccess().getNative_type_subAssignment_3(), "rule__Type__Native_type_subAssignment_3");
					put(grammarAccess.getTypeAccess().getTypedefAssignment_4(), "rule__Type__TypedefAssignment_4");
					put(grammarAccess.getTypedefAccess().getSubtypesAssignment_2(), "rule__Typedef__SubtypesAssignment_2");
					put(grammarAccess.getSubtypesAccess().getNameAssignment_0_1_1(), "rule__Subtypes__NameAssignment_0_1_1");
					put(grammarAccess.getSubtypesAccess().getNative_typeAssignment_0_1_4(), "rule__Subtypes__Native_typeAssignment_0_1_4");
					put(grammarAccess.getSubtypesAccess().getTypedefAssignment_0_1_5(), "rule__Subtypes__TypedefAssignment_0_1_5");
					put(grammarAccess.getNative_typeAccess().getNameAssignment_0(), "rule__Native_type__NameAssignment_0");
					put(grammarAccess.getNative_typeAccess().getTypeAssignment_1(), "rule__Native_type__TypeAssignment_1");
					put(grammarAccess.getEmbeddedAccess().getStringAssignment_4(), "rule__Embedded__StringAssignment_4");
					put(grammarAccess.getEmbeddedAccess().getInAssignment_5_0(), "rule__Embedded__InAssignment_5_0");
					put(grammarAccess.getEmbeddedAccess().getNameAssignment_5_1(), "rule__Embedded__NameAssignment_5_1");
					put(grammarAccess.getEmbeddedAccess().getStringAssignment_6_1(), "rule__Embedded__StringAssignment_6_1");
					put(grammarAccess.getEmbeddedAccess().getInAssignment_6_2_0(), "rule__Embedded__InAssignment_6_2_0");
					put(grammarAccess.getEmbeddedAccess().getNameAssignment_6_2_1(), "rule__Embedded__NameAssignment_6_2_1");
					put(grammarAccess.getDefineAccess().getNameAssignment_1(), "rule__Define__NameAssignment_1");
					put(grammarAccess.getDefineAccess().getMainrocessAssignment_2(), "rule__Define__MainrocessAssignment_2");
					put(grammarAccess.getInitAccess().getNameAssignment_0(), "rule__Init__NameAssignment_0");
					put(grammarAccess.getInitAccess().getMainrocessAssignment_1(), "rule__Init__MainrocessAssignment_1");
					put(grammarAccess.getMainAccess().getNameAssignment_0(), "rule__Main__NameAssignment_0");
					put(grammarAccess.getMainAccess().getMainrocessAssignment_1(), "rule__Main__MainrocessAssignment_1");
					put(grammarAccess.getMainProcessAccess().getParallelStatementAssignment_2(), "rule__MainProcess__ParallelStatementAssignment_2");
					put(grammarAccess.getProcessAccess().getParallelStatementAssignment_0_2(), "rule__Process__ParallelStatementAssignment_0_2");
					put(grammarAccess.getProcessAccess().getParallelStatementAssignment_1_1(), "rule__Process__ParallelStatementAssignment_1_1");
					put(grammarAccess.getParallelStatementAccess().getSequenceStatementAssignment_1_0(), "rule__ParallelStatement__SequenceStatementAssignment_1_0");
					put(grammarAccess.getParallelStatementAccess().getSequenceStatementAssignment_1_1_1(), "rule__ParallelStatement__SequenceStatementAssignment_1_1_1");
					put(grammarAccess.getSequenceStatementAccess().getBasicStatementAssignment_1_0(), "rule__SequenceStatement__BasicStatementAssignment_1_0");
					put(grammarAccess.getSequenceStatementAccess().getBasicStatementAssignment_1_1_1(), "rule__SequenceStatement__BasicStatementAssignment_1_1_1");
					put(grammarAccess.getNDChoiceStatementAccess().getOperationAssignment_1_1_1_0(), "rule__NDChoiceStatement__OperationAssignment_1_1_1_0");
					put(grammarAccess.getNDChoiceStatementAccess().getOperationAssignment_1_1_1_1_0(), "rule__NDChoiceStatement__OperationAssignment_1_1_1_1_0");
					put(grammarAccess.getNDChoiceStatementAccess().getOpAssignment_1_1_1_1_1(), "rule__NDChoiceStatement__OpAssignment_1_1_1_1_1");
					put(grammarAccess.getNDChoiceStatementAccess().getMainProcessAssignment_1_3(), "rule__NDChoiceStatement__MainProcessAssignment_1_3");
					put(grammarAccess.getBasicStatementAccess().getProcessAssignment_0_1(), "rule__BasicStatement__ProcessAssignment_0_1");
					put(grammarAccess.getBasicStatementAccess().getAssignStatementOrPostIncrementDecrementAssignment_1_1(), "rule__BasicStatement__AssignStatementOrPostIncrementDecrementAssignment_1_1");
					put(grammarAccess.getBasicStatementAccess().getNDChoiceStatementAssignment_2(), "rule__BasicStatement__NDChoiceStatementAssignment_2");
					put(grammarAccess.getBasicStatementAccess().getPreIncrementDecrementAssignment_3(), "rule__BasicStatement__PreIncrementDecrementAssignment_3");
					put(grammarAccess.getBasicStatementAccess().getCallAssignment_14(), "rule__BasicStatement__CallAssignment_14");
					put(grammarAccess.getBasicStatementAccess().getOperationAssignment_15(), "rule__BasicStatement__OperationAssignment_15");
					put(grammarAccess.getBasicStatementAccess().getOperationAssignment_16_0(), "rule__BasicStatement__OperationAssignment_16_0");
					put(grammarAccess.getBasicStatementAccess().getOpAssignment_16_1(), "rule__BasicStatement__OpAssignment_16_1");
					put(grammarAccess.getBasicStatementAccess().getScopeAssignment_17(), "rule__BasicStatement__ScopeAssignment_17");
					put(grammarAccess.getBasicStatementAccess().getCompensateAssignment_18(), "rule__BasicStatement__CompensateAssignment_18");
					put(grammarAccess.getBasicStatementAccess().getThrowAssignment_19(), "rule__BasicStatement__ThrowAssignment_19");
					put(grammarAccess.getBasicStatementAccess().getInstallAssignment_20(), "rule__BasicStatement__InstallAssignment_20");
					put(grammarAccess.getIs_functionAccess().getVariablePathAssignment_3(), "rule__Is_function__VariablePathAssignment_3");
					put(grammarAccess.getInstallAccess().getInstallFunctionAssignment_2(), "rule__Install__InstallFunctionAssignment_2");
					put(grammarAccess.getThrowAccess().getNameAssignment_2(), "rule__Throw__NameAssignment_2");
					put(grammarAccess.getThrowAccess().getEspressionAssignment_3_1(), "rule__Throw__EspressionAssignment_3_1");
					put(grammarAccess.getCompensateAccess().getNameAssignment_1(), "rule__Compensate__NameAssignment_1");
					put(grammarAccess.getCompensateAccess().getMainProcessAssignment_2(), "rule__Compensate__MainProcessAssignment_2");
					put(grammarAccess.getScopeAccess().getNameAssignment_2(), "rule__Scope__NameAssignment_2");
					put(grammarAccess.getScopeAccess().getMainProcessAssignment_4(), "rule__Scope__MainProcessAssignment_4");
					put(grammarAccess.getInputOrOutputOperationDefOrCallAccess().getVariablePathAssignment_0_1(), "rule__InputOrOutputOperationDefOrCall__VariablePathAssignment_0_1");
					put(grammarAccess.getInputOrOutputOperationDefOrCallAccess().getInputOperationAssignment_0_3(), "rule__InputOrOutputOperationDefOrCall__InputOperationAssignment_0_3");
					put(grammarAccess.getInputOrOutputOperationDefOrCallAccess().getOutputPortCallAssignment_1_1(), "rule__InputOrOutputOperationDefOrCall__OutputPortCallAssignment_1_1");
					put(grammarAccess.getLinkInAccess().getNameAssignment_3(), "rule__LinkIn__NameAssignment_3");
					put(grammarAccess.getLinkOutAccess().getNameAssignment_3(), "rule__LinkOut__NameAssignment_3");
					put(grammarAccess.getAssignStatementOrPostIncrementDecrementOrInputOperationAccess().getVariablePathAssignment_0(), "rule__AssignStatementOrPostIncrementDecrementOrInputOperation__VariablePathAssignment_0");
					put(grammarAccess.getAssignStatementOrPostIncrementDecrementOrInputOperationAccess().getRightSideAssignment_1(), "rule__AssignStatementOrPostIncrementDecrementOrInputOperation__RightSideAssignment_1");
					put(grammarAccess.getRightSideAccess().getExpressionAssignment_0_2(), "rule__RightSide__ExpressionAssignment_0_2");
					put(grammarAccess.getRightSideAccess().getVariablePathAssignment_3_2(), "rule__RightSide__VariablePathAssignment_3_2");
					put(grammarAccess.getRightSideAccess().getVariablePathAssignment_4_2(), "rule__RightSide__VariablePathAssignment_4_2");
					put(grammarAccess.getSynchronizedAccess().getNameAssignment_2(), "rule__Synchronized__NameAssignment_2");
					put(grammarAccess.getSynchronizedAccess().getMainProcessAssignment_4(), "rule__Synchronized__MainProcessAssignment_4");
					put(grammarAccess.getUndefAccess().getVariablePathAssignment_2(), "rule__Undef__VariablePathAssignment_2");
					put(grammarAccess.getOutputPortCallAccess().getPortAssignment_0(), "rule__OutputPortCall__PortAssignment_0");
					put(grammarAccess.getOutputPortCallAccess().getPortAssignment_1_0(), "rule__OutputPortCall__PortAssignment_1_0");
					put(grammarAccess.getOutputPortCallAccess().getExpressionAssignment_1_2(), "rule__OutputPortCall__ExpressionAssignment_1_2");
					put(grammarAccess.getOutputPortCallAccess().getVariablePathAssignment_1_4_1(), "rule__OutputPortCall__VariablePathAssignment_1_4_1");
					put(grammarAccess.getOutputPortCallAccess().getInstallFunctionAssignment_1_4_3_1(), "rule__OutputPortCall__InstallFunctionAssignment_1_4_3_1");
					put(grammarAccess.getInstallFuncitonAccess().getNameAssignment_0_0(), "rule__InstallFunciton__NameAssignment_0_0");
					put(grammarAccess.getInstallFuncitonAccess().getParallelStatementAssignment_2(), "rule__InstallFunciton__ParallelStatementAssignment_2");
					put(grammarAccess.getInstallFuncitonAccess().getNameAssignment_3_1_0(), "rule__InstallFunciton__NameAssignment_3_1_0");
					put(grammarAccess.getInstallFuncitonAccess().getParallelStatementAssignment_3_3(), "rule__InstallFunciton__ParallelStatementAssignment_3_3");
					put(grammarAccess.getInputOperationAccess().getExpressionAssignment_1_1(), "rule__InputOperation__ExpressionAssignment_1_1");
					put(grammarAccess.getInputOperationAccess().getMainProcessAssignment_1_3(), "rule__InputOperation__MainProcessAssignment_1_3");
					put(grammarAccess.getPreIncrementDecrementAccess().getVariablePathAssignment_1(), "rule__PreIncrementDecrement__VariablePathAssignment_1");
					put(grammarAccess.getIfAccess().getConditionAssignment_2(), "rule__If__ConditionAssignment_2");
					put(grammarAccess.getIfAccess().getIfProcessAssignment_4(), "rule__If__IfProcessAssignment_4");
					put(grammarAccess.getIfAccess().getElseProcessAssignment_5_0_1(), "rule__If__ElseProcessAssignment_5_0_1");
					put(grammarAccess.getIfAccess().getIfNastedAssignment_5_1(), "rule__If__IfNastedAssignment_5_1");
					put(grammarAccess.getForAccess().getParallelStatementAssignment_2(), "rule__For__ParallelStatementAssignment_2");
					put(grammarAccess.getForAccess().getConditionAssignment_4(), "rule__For__ConditionAssignment_4");
					put(grammarAccess.getForAccess().getParallelStatementAssignment_6(), "rule__For__ParallelStatementAssignment_6");
					put(grammarAccess.getForAccess().getBodyAssignment_7(), "rule__For__BodyAssignment_7");
					put(grammarAccess.getConditionAccess().getConditionAssignment_0_1(), "rule__Condition__ConditionAssignment_0_1");
					put(grammarAccess.getConditionAccess().getConditionAssignment_1_1(), "rule__Condition__ConditionAssignment_1_1");
					put(grammarAccess.getConditionAccess().getConditionAssignment_1_3_1(), "rule__Condition__ConditionAssignment_1_3_1");
					put(grammarAccess.getConditionAccess().getVariablePathAssignment_2_1_0(), "rule__Condition__VariablePathAssignment_2_1_0");
					put(grammarAccess.getConditionAccess().getIsFAssignment_2_1_3(), "rule__Condition__IsFAssignment_2_1_3");
					put(grammarAccess.getConditionAccess().getRightConditionAssignment_2_2(), "rule__Condition__RightConditionAssignment_2_2");
					put(grammarAccess.getConditionAccess().getConditionAssignment_2_3_1(), "rule__Condition__ConditionAssignment_2_3_1");
					put(grammarAccess.getRightConditionAccess().getExpressionAssignment_1(), "rule__RightCondition__ExpressionAssignment_1");
					put(grammarAccess.getForeachAccess().getVar1Assignment_3(), "rule__Foreach__Var1Assignment_3");
					put(grammarAccess.getForeachAccess().getVar2Assignment_5(), "rule__Foreach__Var2Assignment_5");
					put(grammarAccess.getForeachAccess().getBodyAssignment_6(), "rule__Foreach__BodyAssignment_6");
					put(grammarAccess.getWhileAccess().getConditionAssignment_2(), "rule__While__ConditionAssignment_2");
					put(grammarAccess.getWhileAccess().getMainProcessAssignment_4(), "rule__While__MainProcessAssignment_4");
					put(grammarAccess.getExpressionAccess().getOpAssignment_1_1(), "rule__Expression__OpAssignment_1_1");
					put(grammarAccess.getExpressionAccess().getRightAssignment_1_2(), "rule__Expression__RightAssignment_1_2");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_2(), "rule__TerminalExpression__ValueAssignment_1_2");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_2(), "rule__TerminalExpression__ValueAssignment_2_2");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1(), "rule__TerminalExpression__ValueAssignment_3_1");
					put(grammarAccess.getTerminalExpressionAccess().getVariablePathAssignment_4_1(), "rule__TerminalExpression__VariablePathAssignment_4_1");
					put(grammarAccess.getTerminalExpressionAccess().getVariablePathAssignment_5_0(), "rule__TerminalExpression__VariablePathAssignment_5_0");
					put(grammarAccess.getVariablePathAccess().getDotAssignment_0_2(), "rule__VariablePath__DotAssignment_0_2");
					put(grammarAccess.getVariablePathAccess().getNameAssignment_0_3(), "rule__VariablePath__NameAssignment_0_3");
					put(grammarAccess.getVariablePathAccess().getChildrenAssignment_0_4_1(), "rule__VariablePath__ChildrenAssignment_0_4_1");
					put(grammarAccess.getVariablePathAccess().getChildrenAssignment_0_5_0_2_1(), "rule__VariablePath__ChildrenAssignment_0_5_0_2_1");
					put(grammarAccess.getVariablePathAccess().getChildrenAssignment_0_5_1_2(), "rule__VariablePath__ChildrenAssignment_0_5_1_2");
					put(grammarAccess.getVariablePathAccess().getChildrenAssignment_1_2_0_2_1(), "rule__VariablePath__ChildrenAssignment_1_2_0_2_1");
					put(grammarAccess.getVariablePathAccess().getChildrenAssignment_1_2_1_2(), "rule__VariablePath__ChildrenAssignment_1_2_1_2");
					put(grammarAccess.getWithAccess().getNameAssignment_3(), "rule__With__NameAssignment_3");
					put(grammarAccess.getWithAccess().getMainrocessAssignment_5(), "rule__With__MainrocessAssignment_5");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_1(), "rule__Interface__NameAssignment_1");
					put(grammarAccess.getInterfaceAccess().getRequestResponseOperationAssignment_3_0(), "rule__Interface__RequestResponseOperationAssignment_3_0");
					put(grammarAccess.getInterfaceAccess().getOneWayOperationAssignment_3_1(), "rule__Interface__OneWayOperationAssignment_3_1");
					put(grammarAccess.getPortAccess().getInputPortStatementAssignment_0(), "rule__Port__InputPortStatementAssignment_0");
					put(grammarAccess.getPortAccess().getOutputPortStatementAssignment_1(), "rule__Port__OutputPortStatementAssignment_1");
					put(grammarAccess.getInputPortStatementAccess().getNameAssignment_1(), "rule__InputPortStatement__NameAssignment_1");
					put(grammarAccess.getInputPortStatementAccess().getLocationAssignment_3_0(), "rule__InputPortStatement__LocationAssignment_3_0");
					put(grammarAccess.getInputPortStatementAccess().getProtocolAssignment_3_1(), "rule__InputPortStatement__ProtocolAssignment_3_1");
					put(grammarAccess.getInputPortStatementAccess().getOneWayOperationAssignment_3_2(), "rule__InputPortStatement__OneWayOperationAssignment_3_2");
					put(grammarAccess.getInputPortStatementAccess().getRequestResponseOperationAssignment_3_3(), "rule__InputPortStatement__RequestResponseOperationAssignment_3_3");
					put(grammarAccess.getInputPortStatementAccess().getRedirectsAssignment_3_4(), "rule__InputPortStatement__RedirectsAssignment_3_4");
					put(grammarAccess.getInputPortStatementAccess().getAggregatesAssignment_3_5(), "rule__InputPortStatement__AggregatesAssignment_3_5");
					put(grammarAccess.getInputPortStatementAccess().getIntefacesAssignment_3_6(), "rule__InputPortStatement__IntefacesAssignment_3_6");
					put(grammarAccess.getOutputPortStatementAccess().getNameAssignment_1(), "rule__OutputPortStatement__NameAssignment_1");
					put(grammarAccess.getOutputPortStatementAccess().getLocationAssignment_3_0(), "rule__OutputPortStatement__LocationAssignment_3_0");
					put(grammarAccess.getOutputPortStatementAccess().getProtocolAssignment_3_1(), "rule__OutputPortStatement__ProtocolAssignment_3_1");
					put(grammarAccess.getOutputPortStatementAccess().getOneWayOperationAssignment_3_2(), "rule__OutputPortStatement__OneWayOperationAssignment_3_2");
					put(grammarAccess.getOutputPortStatementAccess().getRequestResponseOperationAssignment_3_3(), "rule__OutputPortStatement__RequestResponseOperationAssignment_3_3");
					put(grammarAccess.getOutputPortStatementAccess().getIntefacesAssignment_3_4(), "rule__OutputPortStatement__IntefacesAssignment_3_4");
					put(grammarAccess.getOneWayOperationAccess().getNameAssignment_3(), "rule__OneWayOperation__NameAssignment_3");
					put(grammarAccess.getRequestResponseOperationAccess().getNameAssignment_3(), "rule__RequestResponseOperation__NameAssignment_3");
					put(grammarAccess.getOneWayOperationSignatureAccess().getNameAssignment_1(), "rule__OneWayOperationSignature__NameAssignment_1");
					put(grammarAccess.getOneWayOperationSignatureAccess().getTypeOfThrowAssignment_2_1(), "rule__OneWayOperationSignature__TypeOfThrowAssignment_2_1");
					put(grammarAccess.getOneWayOperationSignatureAccess().getOpAssignment_3_1(), "rule__OneWayOperationSignature__OpAssignment_3_1");
					put(grammarAccess.getRequestResponseSignatureAccess().getNameAssignment_1(), "rule__RequestResponseSignature__NameAssignment_1");
					put(grammarAccess.getRequestResponseSignatureAccess().getTypeOfThrowAssignment_2_1(), "rule__RequestResponseSignature__TypeOfThrowAssignment_2_1");
					put(grammarAccess.getRequestResponseSignatureAccess().getTypeOfThrowAssignment_2_4(), "rule__RequestResponseSignature__TypeOfThrowAssignment_2_4");
					put(grammarAccess.getRequestResponseSignatureAccess().getFaultsAssignment_3_1(), "rule__RequestResponseSignature__FaultsAssignment_3_1");
					put(grammarAccess.getRequestResponseSignatureAccess().getOpAssignment_4_1(), "rule__RequestResponseSignature__OpAssignment_4_1");
					put(grammarAccess.getThrowsClauseAccess().getNameAssignment_0(), "rule__ThrowsClause__NameAssignment_0");
					put(grammarAccess.getThrowsClauseAccess().getTypeAssignment_1_1(), "rule__ThrowsClause__TypeAssignment_1_1");
					put(grammarAccess.getTypeOfThrowAccess().getTypeAssignment_0(), "rule__TypeOfThrow__TypeAssignment_0");
					put(grammarAccess.getTypeOfThrowAccess().getNaiveTypeAssignment_1_1(), "rule__TypeOfThrow__NaiveTypeAssignment_1_1");
					put(grammarAccess.getLocationAccess().getUriAssignment_2(), "rule__Location__UriAssignment_2");
					put(grammarAccess.getUriAccess().getNameAssignment_0_1(), "rule__Uri__NameAssignment_0_1");
					put(grammarAccess.getInterfacesAccess().getInterfaceAssignment_2(), "rule__Interfaces__InterfaceAssignment_2");
					put(grammarAccess.getInterfacesAccess().getInterfaceAssignment_3_1(), "rule__Interfaces__InterfaceAssignment_3_1");
					put(grammarAccess.getProtocolAccess().getNameAssignment_2(), "rule__Protocol__NameAssignment_2");
					put(grammarAccess.getProtocolAccess().getProtocolConfigurationAssignment_3(), "rule__Protocol__ProtocolConfigurationAssignment_3");
					put(grammarAccess.getProtocolConfigurationAccess().getMainProcessAssignment(), "rule__ProtocolConfiguration__MainProcessAssignment");
					put(grammarAccess.getRedirectsAccess().getRedRefAssignment_2(), "rule__Redirects__RedRefAssignment_2");
					put(grammarAccess.getRedirectsAccess().getRedRefAssignment_3_1(), "rule__Redirects__RedRefAssignment_3_1");
					put(grammarAccess.getRedirectDefAccess().getNameAssignment_0(), "rule__RedirectDef__NameAssignment_0");
					put(grammarAccess.getRedirectDefAccess().getOutputPortIdentifierAssignment_2(), "rule__RedirectDef__OutputPortIdentifierAssignment_2");
					put(grammarAccess.getAggregatesAccess().getNameAssignment_2(), "rule__Aggregates__NameAssignment_2");
					put(grammarAccess.getAggregatesAccess().getNameAssignment_3_1(), "rule__Aggregates__NameAssignment_3_1");
					put(grammarAccess.getInterfaceAccess().getUnorderedGroup_3(), "rule__Interface__UnorderedGroup_3");
					put(grammarAccess.getInputPortStatementAccess().getUnorderedGroup_3(), "rule__InputPortStatement__UnorderedGroup_3");
					put(grammarAccess.getOutputPortStatementAccess().getUnorderedGroup_3(), "rule__OutputPortStatement__UnorderedGroup_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			jolie.xtext.ui.contentassist.antlr.internal.InternalJolieParser typedParser = (jolie.xtext.ui.contentassist.antlr.internal.InternalJolieParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public JolieGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(JolieGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
