/*
 * generated by Xtext
 */
package jolie.xtext.scoping;

import java.util.LinkedHashSet;

import jolie.xtext.jolie.Program;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.resource.IResourceDescription;
import org.eclipse.xtext.resource.IResourceDescriptions;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.scoping.impl.ImportUriGlobalScopeProvider;

import com.google.inject.Inject;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */
public class JolieScopeProvider extends ImportUriGlobalScopeProvider {

	@Inject
	private IResourceDescriptions descriptions;
	
	
	@Override
	protected LinkedHashSet<URI> getImportedUris(EObject context)
	{
		System.out.println("Sono nel global SCOPER PROVIDER; DENTRO UN PROGRAM E DOVREI IMPORTARE IL WORKSPACE"+ context.toString());
		
	LinkedHashSet<URI> uris = super.getImportedUris(context);
	System.out.println("Quante sono le uris importate?"+uris.size());
	
	Iterable<IResourceDescription> allResourceDescriptions = descriptions.getAllResourceDescriptions();
    for (IResourceDescription description : allResourceDescriptions) {
         
    	 
   	     uris.add(description.getURI());
    }
	
    
   
    
    uris.add(URI.createURI("platform:/resource/JolieInclude/console.io"));
	/*System.out.println("description uri:"+description.getURI());
	
	
	 uris.add(description.getURI());*/
	
	if (context instanceof Program)
	{
		System.out.println("Sono un istanza di program");
		/* Iterable<IResourceDescription> allResourceDescriptions = descriptions.getAllResourceDescriptions();
         for (IResourceDescription description : allResourceDescriptions) {
                 
        	 uris.add(description.getURI());
         }
     */    
	}
	return uris; 
	}
}
